<?php

namespace App\{moduleContainer}\{{module}}\Controllers;

use App\{moduleContainer}\{{module}}\Interfaces\{module}Interface;
use App\{moduleContainer}\{{module}}\Requests\{module}CreateRequest;
use App\{moduleContainer}\{{module}}\Requests\{module}UpdateRequest;
use Illuminate\Http\JsonResponse;
use Ensue\Snap\Controllers\SnapController;
use Ensue\Snap\Requests\SnapRequest;

/**
 * Class {{module}}Controller
 * @package App\{moduleContainer}\{{module}}\Controllers
 */
final class {{module}}Controller extends SnapController
{
    /**
     * {{module}}Controller constructor.
     * @param {module}Interface $repository
     */
    public function __construct(private readonly {module}Interface $repository)
    {
    }

    /**
     * @param SnapRequest $request
     * @return JsonResponse
     */
    public function index(SnapRequest $request): JsonResponse
    {
        return $this->responseOk($this->repository->getList($request->all()));
    }

    /**
     * @param {module}CreateRequest $request
     * @return JsonResponse
     */
    public function store({module}CreateRequest $request): JsonResponse
    {
        return $this->responseOk($this->repository->create($request->all()));
    }

    /**
     * @param {module}UpdateRequest $request
     * @param string $id
     * @return JsonResponse
     */
    public function update({module}UpdateRequest $request, string $id): JsonResponse
    {
        return $this->responseOk($this->repository->update($id,$request->all()));
    }

    /**
     * @param SnapRequest $request
     * @param string $id
     * @return JsonResponse
     */
    public function destroy(SnapRequest $request, string $id): JsonResponse
    {
        return $this->responseOk($this->repository->destroy($id));
    }

    /**
     * @param SnapRequest $request
     * @param string $id
     * @return JsonResponse
     */
    public function show (SnapRequest $request, string $id): JsonResponse
    {
        return $this->responseOk($this->repository->getById($id));
    }

    /**
     * @param SnapRequest $request
     * @param string $id
     * @return JsonResponse
     */
    public function toggleStatus(SnapRequest $request, string $id): JsonResponse
    {
        return $this->responseOk($this->repository->toggleStatus($id));
    }
}
